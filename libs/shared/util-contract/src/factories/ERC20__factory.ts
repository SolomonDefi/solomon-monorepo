/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { ERC20, ERC20Interface } from '../ERC20'

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: 'name_',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'symbol_',
        type: 'string',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x60806040523480156200001157600080fd5b5060405162001532380380620015328339818101604052810190620000379190620002da565b81600390805190602001906200004f9291906200008d565b508060049080519060200190620000689291906200008d565b506012600560006101000a81548160ff021916908360ff1602179055505050620003c4565b8280546200009b906200038e565b90600052602060002090601f016020900481019282620000bf57600085556200010b565b82601f10620000da57805160ff19168380011785556200010b565b828001600101855582156200010b579182015b828111156200010a578251825591602001919060010190620000ed565b5b5090506200011a91906200011e565b5090565b5b80821115620001395760008160009055506001016200011f565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001a6826200015b565b810181811067ffffffffffffffff82111715620001c857620001c76200016c565b5b80604052505050565b6000620001dd6200013d565b9050620001eb82826200019b565b919050565b600067ffffffffffffffff8211156200020e576200020d6200016c565b5b62000219826200015b565b9050602081019050919050565b60005b838110156200024657808201518184015260208101905062000229565b8381111562000256576000848401525b50505050565b6000620002736200026d84620001f0565b620001d1565b90508281526020810184848401111562000292576200029162000156565b5b6200029f84828562000226565b509392505050565b600082601f830112620002bf57620002be62000151565b5b8151620002d18482602086016200025c565b91505092915050565b60008060408385031215620002f457620002f362000147565b5b600083015167ffffffffffffffff8111156200031557620003146200014c565b5b6200032385828601620002a7565b925050602083015167ffffffffffffffff8111156200034757620003466200014c565b5b6200035585828601620002a7565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003a757607f821691505b60208210811415620003be57620003bd6200035f565b5b50919050565b61115e80620003d46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b74565b60405180910390f35b6100e660048036038101906100e19190610c2f565b610308565b6040516100f39190610c8a565b60405180910390f35b61010461031f565b6040516101119190610cb4565b60405180910390f35b610134600480360381019061012f9190610ccf565b610329565b6040516101419190610c8a565b60405180910390f35b6101526103d3565b60405161015f9190610d3e565b60405180910390f35b610182600480360381019061017d9190610c2f565b6103ea565b60405161018f9190610c8a565b60405180910390f35b6101b260048036038101906101ad9190610d59565b610488565b6040516101bf9190610cb4565b60405180910390f35b6101d06104d0565b6040516101dd9190610b74565b60405180910390f35b61020060048036038101906101fb9190610c2f565b610562565b60405161020d9190610c8a565b60405180910390f35b610230600480360381019061022b9190610c2f565b610600565b60405161023d9190610c8a565b60405180910390f35b610260600480360381019061025b9190610d86565b610617565b60405161026d9190610cb4565b60405180910390f35b60606003805461028590610df5565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610df5565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031533848461069e565b6001905092915050565b6000600254905090565b6000610336848484610869565b6103c8843384600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103c39190610e56565b61069e565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600061047e338484600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104799190610e8a565b61069e565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546104df90610df5565b80601f016020809104026020016040519081016040528092919081815260200182805461050b90610df5565b80156105585780601f1061052d57610100808354040283529160200191610558565b820191906000526020600020905b81548152906001019060200180831161053b57829003601f168201915b5050505050905090565b60006105f6338484600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105f19190610e56565b61069e565b6001905092915050565b600061060d338484610869565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561070e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590610f52565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561077e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077590610fe4565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161085c9190610cb4565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d090611076565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610949576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094090611108565b60405180910390fd5b610954838383610ad6565b806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461099e9190610e56565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a2a9190610e8a565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ac99190610cb4565b60405180910390a3505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b15578082015181840152602081019050610afa565b83811115610b24576000848401525b50505050565b6000601f19601f8301169050919050565b6000610b4682610adb565b610b508185610ae6565b9350610b60818560208601610af7565b610b6981610b2a565b840191505092915050565b60006020820190508181036000830152610b8e8184610b3b565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bc682610b9b565b9050919050565b610bd681610bbb565b8114610be157600080fd5b50565b600081359050610bf381610bcd565b92915050565b6000819050919050565b610c0c81610bf9565b8114610c1757600080fd5b50565b600081359050610c2981610c03565b92915050565b60008060408385031215610c4657610c45610b96565b5b6000610c5485828601610be4565b9250506020610c6585828601610c1a565b9150509250929050565b60008115159050919050565b610c8481610c6f565b82525050565b6000602082019050610c9f6000830184610c7b565b92915050565b610cae81610bf9565b82525050565b6000602082019050610cc96000830184610ca5565b92915050565b600080600060608486031215610ce857610ce7610b96565b5b6000610cf686828701610be4565b9350506020610d0786828701610be4565b9250506040610d1886828701610c1a565b9150509250925092565b600060ff82169050919050565b610d3881610d22565b82525050565b6000602082019050610d536000830184610d2f565b92915050565b600060208284031215610d6f57610d6e610b96565b5b6000610d7d84828501610be4565b91505092915050565b60008060408385031215610d9d57610d9c610b96565b5b6000610dab85828601610be4565b9250506020610dbc85828601610be4565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e0d57607f821691505b60208210811415610e2157610e20610dc6565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e6182610bf9565b9150610e6c83610bf9565b925082821015610e7f57610e7e610e27565b5b828203905092915050565b6000610e9582610bf9565b9150610ea083610bf9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ed557610ed4610e27565b5b828201905092915050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f3c602483610ae6565b9150610f4782610ee0565b604082019050919050565b60006020820190508181036000830152610f6b81610f2f565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fce602283610ae6565b9150610fd982610f72565b604082019050919050565b60006020820190508181036000830152610ffd81610fc1565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611060602583610ae6565b915061106b82611004565b604082019050919050565b6000602082019050818103600083015261108f81611053565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006110f2602383610ae6565b91506110fd82611096565b604082019050919050565b60006020820190508181036000830152611121816110e5565b905091905056fea26469706673582212202d5f9cf047d49c1457a502c4d70fb31aa3366d6a9f23564a46eee0ea4fae208e64736f6c63430008090033'

export class ERC20__factory extends ContractFactory {
  constructor(...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0])
    } else {
      super(...args)
    }
  }

  deploy(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ERC20> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC20>
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {})
  }
  attach(address: string): ERC20 {
    return super.attach(address) as ERC20
  }
  connect(signer: Signer): ERC20__factory {
    return super.connect(signer) as ERC20__factory
  }
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): ERC20Interface {
    return new utils.Interface(_abi) as ERC20Interface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {
    return new Contract(address, _abi, signerOrProvider) as ERC20
  }
}
