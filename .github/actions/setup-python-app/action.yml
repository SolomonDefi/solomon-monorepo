name: 'Python App Set up'
description: 'Set up Python app for unit tests'
inputs:
  app-name:
    description: 'Python app project name'
    required: true
  create-db:
    description: 'Create database for testing'
    required: true
runs:
  using: 'composite'
  steps:
    - id: random-generator
      run: echo "::set-output name=random-id::test$(echo $RANDOM)"
      shell: bash
    - name: Cache Poetry
      uses: actions/cache@v2
      with:
        path: apps/{{ inputs.app-name }}/.venv
        key: venv-${{ runner.os }}-3.9-${{ hashFiles('**/poetry.lock') }}
    - name: Install poetry packages
      run: cd apps/${{ inputs.app-name }} && poetry install
      shell: bash
    - name: Copy .env
      run: cp apps/${{ inputs.app-name }}/.env.dist apps/${{ inputs.app-name }}/.env
      shell: bash
    - name: Set a random db name for testing
      run: echo "TEST_DB=${{ steps.random-generator.outputs.random-id }}" >> apps/${{ inputs.app-name }}/.env
      shell: bash
    - name: Create testing database
      run: |
        ${{ inputs.create-db }} && ./.github/actions/setup-python-app/create_db.sh ${{ steps.random-generator.outputs.random-id }} || true
      shell: bash
      env:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
